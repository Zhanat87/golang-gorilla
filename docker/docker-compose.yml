version: '2'

services:
  microservice:
    build: .
    image: zhanat87/golang-gorilla:1.0.0
    environment:
      - PORT=8080
    ports:
      - "8080"
    links:
      - mysql

  # https://github.com/variadico/hellodocker
  proxy:
      image: nginx:latest
      ports:
          - "80:80" # host:container
          - "443:443"
      volumes:
          - ./nginx.conf:/etc/nginx/nginx.conf:ro
          # connect host's ./nginx.conf with container's nginx.conf
          # :ro == read only perms in container
      links:
          - microservice:app # [other container]:[alias in this container]
            # creates environment variables in proxy container
            # with ip and port info for go container
            # also creates entries in /etc/hosts with ip info

  mysql:
    image: mysql
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_USER=gorilla
      - MYSQL_PASSWORD=gorilla
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=gorilla
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - my-datavolume:/var/lib/mysql

  adminer:
    image: hardware/adminer
    container_name: adminer
    ports:
      - "8888:8888"
    links:
      - mysql

# https://stackoverflow.com/questions/39175194/docker-compose-persistent-data-mysql
# https://docs.docker.com/engine/tutorials/dockervolumes/#important-tips-on-using-shared-volumes
volumes:
  my-datavolume: